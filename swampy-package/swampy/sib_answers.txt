# Text answers from Week 0

# Name: Aarthi Narayan



Explain what each of the following lines does. Use the terminology you learned from the book (or Google)
	
	from TurtleWorld import *
	world = TurtleWorld()
	bob = Turtle()
	wait_for_user()

Answer: 
The first line imports the module TurtleWorld into this program
The second line assigns world to TurtleWorld()
The third line assigns Turtle() to bob
The fourth informs the module TurtleWorld to wait for the user input.






These questions pertain to the program you wrote in Week0.

-- What are the arguments of polygon()?  What type is each argument?
Answer: Turtle,length,n
turtle is class 'TurtleWorld.Turtle'
Length is int
n is also int

-- What two turtle functions did you use to draw the sides of the polygon?
Answer: forward : fd(t) and left turn : lt(t)

-- What are the arguments for polyline?  What type is each argument?
Answer: turtle, no. of segments, length, angle
turtle : Class
no. of seqments or recursions : int
length = int
angle = int




Suppose you wrote a function, center_circle(), that draws a circle of a given radius around the current location of the turtle and restores the turtle to its starting point.

-- What turtle functions would you use to move the turtle from the center to the edge of the circle and get ready to call the original circle() function?
Answer: 
pu(t)
fd(t,radius)
pd(t)
circle(t,radius=50)

-- Suppose the interface of this function requires the turtle to end up in the same place it started, facing in the same direction it started.
Answer: Enclose the circle in for loop so that the turtle takes an extra turn

def move_turtle(t,radius):
    pu(t)
    fd(t,radius)
    pd(t)
 
 move(bob,radius=50)
 circle(t,radius=50)
 lt(bob)
 move(bob,radius=50)
 




-- What is this type of requirement called?
Answer: postcondition